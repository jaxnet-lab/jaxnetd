@startuml
title Jaxnet Headers Hierarchy

top to bottom direction

' hide the spot
hide circle

' avoid problems with angled crows feet
skinparam linetype ortho

package btc {
  entity BTC_Header {
    //methods://
    - BlockHash(): **Hash**
    ---
    //fields://
    * version: **int32**
    * prev_block: **Hash**
    * merkle_root: **Hash**
    * timestamp: **uint32**
    * bits: **uint32**
    * nonce: **uint32**
    --
   ' - size: 80 bytes
    '//[4 + 32 + 32 + 4 + 4 + 4]//
  }


  entity BTC_Block {
  --
    //fields://
    * header: **BTC_Header**
    * txs: **[]Tx**
  }

  BTC_Block ||- BTC_Header
'  BTC_Block }|- Tx : > includes
}


package beacon {
  entity Beacon_Header {
    //methods://
    - BlockHash(): **Hash**
    - ExclusiveHash(): **Hash** (without **btc_aux**)
    - PowHash: **Hash** == BTC_Header.Hash()
    --
    //fields://
    * version: **int32**
    * prev_block: **Hash**
    * merkle_root: **Hash**
    * bits: **uint32**
    * merge_mining_root: **Hash**
    * tree_encoding: **[]uint8**
    * shards: **uint32**
    * k: **uint32**
    * vote_k: **uint32**
    --
    * btc_header: **BTC_Header**
    * btc_coinbase: **Tx**
    * btc_tx_merkle_path: **[]Hash**
    --
  '  - size: 243 .. n MB
  '   //[4 + 32 + 32 + 4 + 4 + 32 + X + 4 + 4 + 4 + 80 + Y + Z]//
  '   //X - 1 .. 256//
  '   //Y - 10 .. n MB//
  '   //Z - 32 .. 32x1000//
  '   //[4 + 32 + 32 + 4 + 4 + 32 + 1 + 4 + 4 + 4 + 80 + 10 + 32]//
  }

  entity Beacon_Block {
  --
    //fields://
    * header: **Beacon_Header**
    * txs: **[]Tx**
  }

  Beacon_Header ||- BTC_Header : > includes
'  Beacon_Header ||- Tx : > includes BTC Coinbase Tx

  Beacon_Block ||- Beacon_Header
'  Beacon_Block }|- Tx : > includes
}

package shards {
  entity Shard_Block {
  --
    //fields://
    * header: **Shard_Header**
    * txs: **[]Tx**
  }

  entity Shard_Header {
    //methods://
   - BlockHash(): **Hash**
   - ExclusiveHash(): **Hash** (hash without **Beacon_Header**)
   - PowHash: **Hash** == BTC_Header.Hash()
   --
    //fields://
    * prev_block: **Hash**
    * merkle_root: **Hash**
    * bits: **uint32**
    * merge_mining_n: **uint32**
    --
    * beacon_header: **Beacon_Header**
    * beacon_coinbase: **Tx**
    * beacon_tx_merkle_path: **[]Hash**
    --
  '  - size: 346 .. n MB
  '   //[32 + 32 + 4 + 4 + X + Y + Z ]//
  '   //X - 232 .. n MB//
  '   //Y - 10 .. n MB
  '   //Z - 32 .. 32x1000//
  '   //[32 + 32 + 4 + 4 + 232 + 10 + 32]//
  }

  Shard_Header ||- Beacon_Header : > includes
'  Shard_Header ||- Tx : > includes Beacon Coinbase Tx

  Shard_Block ||- Shard_Header
'  Shard_Block }|- Tx : > includes
}


'entity TxIn {
'---
'  //fields://
'  * prev_out_hash: **Hash**
'  * prev_out_n: **uint32**
'  * signature_script: **[]byte**
'  * witness: **[][]byte**
'  * sequence: **uint32**
'}
'
'
'entity TxOut {
'---
'  //fields://
'  * value: **int64**
'  * pk_script: **[]byte**
'}
'
'
'entity Tx {
'---
'  //fields://
'  * version: **int32**
'  * tx_in: **[]TxIn**
'  * tx_out: **[]TxOut**
'  * locktime: **uint32**
'}
'
'Tx }|- TxIn : > includes 0..n
'Tx }|- TxOut : > includes 0..n

@enduml
