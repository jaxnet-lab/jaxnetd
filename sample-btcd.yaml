#[Application Options]

# ------------------------------------------------------------------------------
# Data settings
# ------------------------------------------------------------------------------

# The directory to store data such as the block chain and peer addresses.  The
# block chain takes several GB, so this location must have a lot of free space.
# The default is ~/.btcd/data on POSIX OSes, $LOCALAPPDATA/Btcd/data on Windows,
# ~/Library/Application Support/Btcd/data on Mac OS, and $home/btcd/data on
# Plan9.  Environment variables are expanded so they may be used.  NOTE: Windows
# environment variables are typically %VARIABLE%, but they must be accessed with
# $VARIABLE here.  Also, ~ is expanded to $LOCALAPPDATA on Windows.
#data_dir: ~/.btcd/data

#db_type: ""

#log_dir: ""

# ------------------------------------------------------------------------------
# Network settings
# ------------------------------------------------------------------------------

# Use testnet.
#testnet: true

# Use simnet
#simnet: true

# Use regression_testnet
#regression_test: true

# Connect via a SOCKS5 proxy.  NOTE: Specifying a proxy will disable listening
# for incoming connections unless listen addresses are provided via the 'listen'
# option.

#proxy: 127.0.0.1:9050
#proxy_user: ""
#proxy_pass: ""

# The SOCKS5 proxy above is assumed to be Tor (https://www.torproject.org).
# If the proxy is not tor the following may be used to prevent using tor
# specific SOCKS queries to lookup addresses (this increases anonymity when tor
# is used by preventing your IP being leaked via DNS).

#no_onion: true

# Use an alternative proxy to connect to .onion addresses. The proxy is assumed
# to be a Tor node. Non .onion addresses will be contacted with the main proxy
# or without a proxy if none is set.

#onion_proxy: 127.0.0.1:9051
#onion_proxy_user: ""
#onion_proxy_pass: ""


# Enable Tor stream isolation by randomizing proxy user credentials resulting in
# Tor creating a new circuit for each connection.  This makes it more difficult
# to correlate connections.

#tor_isolation: true

# Use Universal Plug and Play (UPnP) to automatically open the listen port
# and obtain the external IP address from supported devices.  NOTE: This option
# will have no effect if exernal IP addresses are specified.

#upnp: true

# Specify the external IP addresses your node is listening on.  One address per
# line.  btcd will not contact 3rd-party sites to obtain external ip addresses.
# This means if you are behind NAT, your node will not be able to advertise a
# reachable address unless you specify it here or enable the 'upnp' option (and
# have a supported device).

#external_ips:
#  - 1.2.3.4
#  - 2002::1234

# ******************************************************************************
# Summary of 'add_peers' versus 'connect'.
#
# Only one of the following two options, 'add_peers' and 'connect_peers', may be
# specified.  Both allow you to specify peers that you want to stay connected
# with, but the behavior is slightly different.  By default, btcd will query DNS
# to find peers to connect to, so unless you have a specific reason such as
# those described below, you probably won't need to modify anything here.
#
# 'add_peers' does not prevent connections to other peers discovered from
# the peers you are connected to and also lets the remote peers know you are
# available so they can notify other peers they can to connect to you.  This
# option might be useful if you are having problems finding a node for some
# reason (perhaps due to a firewall).
#
# 'connect', on the other hand, will ONLY connect to the specified peers and
# no others.  It also disables listening (unless you explicitly set listen
# addresses via the 'listen' option) and DNS seeding, so you will not be
# advertised as an available peer to the peers you connect to and won't accept
# connections from any other peers.  So, the 'connect' option effectively allows
# you to only connect to "trusted" peers.
# ******************************************************************************
#
# Add persistent peers to connect to as desired.  One peer per line.
# You may specify each IP address with or without a port.  The default port will
# be added automatically if one is not specified here.

#add_peers:
#  - 192.168.1.1
#  - 10.0.0.2:8333
#  - fe80::1
#  - [fe80::2]:8333


# Add persistent peers that you ONLY want to connect to as desired. One peer
# per line.  You may specify each IP address with or without a port.  The
# default port will be added automatically if one is not specified here.
# NOTE: Specifying this option has other side effects as described above in
# the 'add_peers' versus 'connect_peers' summary section.

#connect_peers:
#  - 192.168.1.1
#  - 10.0.0.2:8333
#  - fe80::1
#  - [fe80::2]:8333

# Maximum number of inbound and outbound peers.
#max_peers: 125

# Disable banning of misbehaving peers.
#disable_banning: true

# Maximum allowed ban score before disconnecting and banning misbehaving peers.
#ban_threshold: 100

# How long to ban misbehaving peers. Valid time units are {s, m, h}.
# Minimum 1s.
#ban_duration: 24h
#ban_duration: 11h30m15s

# Add whitelisted IP networks and IPs. Connected peers whose IP matches a
# whitelist will not have their ban score increased.

#whitelists:
#  - 127.0.0.1
#  - ::1
#  - 192.168.0.0/24
#  - fd00::/16

#agent_blacklist:
#  - ""

#agent_whitelist:
#  - ""

# Disable DNS seeding for peers.  By default, when btcd starts, it will use
# DNS to query for available peers to connect with.
#disable_dns_seed: true

# Specify the interfaces to listen on.  One listen address per line.
# NOTE: The default port is modified by some options such as 'testnet', so it is
# recommended to not specify a port and allow a proper default to be chosen
# unless you have a specific reason to do otherwise.

#listeners:
#  - ""               # All interfaces on default port (this is the default)
#  - "0.0.0.0"        # All ipv4 interfaces on default port
#  - "::"             # All ipv6 interfaces on default port
#  - ":8333"          # All interfaces on port 8333:
#  - "0.0.0.0:8333"   # All ipv4 interfaces on port 8333
#  - "[::]:8333"      # All ipv6 interfaces on port 8333
#  - "127.0.0.1:8333" # Only ipv4 localhost on port 8333
#  - "[::1]:8333"     # Only ipv6 localhost on port 8333
#  - "127.0.0.1:8336" # Only ipv4 localhost on non-standard port 8336
#  - ":8336"          # All interfaces on non-standard port 8336
#  - "0.0.0.0:8336"   # All ipv4 interfaces on non-standard port 8336
#  - "[::]:8336"      # All ipv6 interfaces on non-standard port 8336:


# Disable listening for incoming connections.  This will override all listeners.
#disable_listen: true

# Disable peer bloom filtering.  See BIP0111.
#no_peer_bloom_filters: true

# Add additional checkpoints. Format: '<height>:<hash>'
#add_checkpoints:
#  - <height>:<hash>

# Add comments to the user agent that is advertised to peers.
# Must not include characters '/', ':', '(' and ')'.
#user_agent_comments: ""

# Disable committed peer filtering (CF).
#no_c_filters: true



# ------------------------------------------------------------------------------
# RPC server options - The following options control the built-in RPC server
# which is used to control and query information from a running btcd process.

# NOTE: The RPC server is disabled by default if rpc_user AND rpc_pass, or
# rpc_limit_user AND rpc_limit_pass, are not specified.
# ------------------------------------------------------------------------------

# Secure the RPC API by specifying the username and password.  You can also
# specify a limited username and password.  You must specify at least one
# full set of credentials - limited or admin - or the RPC server will
# be disabled.

#rpc_user: whatever_admin_username_you_want
#rpc_pass: ""
#rpc_limit_user: whatever_limited_username_you_want
#rpc_limit_pass: ""

# Specify the interfaces for the RPC server listen on.  One listen address per
# line.  NOTE: The default port is modified by some options such as 'testnet',
# so it is recommended to not specify a port and allow a proper default to be
# chosen unless you have a specific reason to do otherwise.  By default, the
# RPC server will only listen on localhost for IPv4 and IPv6.

#rpc_listeners:
#  - ""               # All interfaces on default port (this is the default)
#  - "0.0.0.0"        # All ipv4 interfaces on default port
#  - "::"             # All ipv6 interfaces on default port
#  - ":8334"          # All interfaces on port 8334:
#  - "0.0.0.0:8334"   # All ipv4 interfaces on port 8334
#  - "[::]:8334"      # All ipv6 interfaces on port 8334
#  - "127.0.0.1:8334" # Only ipv4 localhost on port 8334
#  - "[::1]:8334"     # Only ipv6 localhost on port 8334
#  - "127.0.0.1:8337" # Only ipv4 localhost on non-standard port 8337
#  - ":8337"          # All interfaces on non-standard port 8337
#  - "0.0.0.0:8337"   # All ipv4 interfaces on non-standard port 8337
#  - "[::]:8337"      # All ipv6 interfaces on non-standard port 8337:


# Specify the maximum number of concurrent RPC clients for standard connections.
#rpc_max_clients: 10

# Specify the maximum number of concurrent RPC websocket clients.
#rpc_max_websockets: 25

# Mirror some JSON-RPC quirks of Bitcoin Core -- NOTE: Discouraged unless
# interoperability issues need to be worked around
#rpc_quirks: true

# Use the following setting to disable the RPC server even if the rpcuser and
# rpcpass are specified above.  This allows one to quickly disable the RPC
# server without having to remove credentials from the config file.
#disable_rpc: true

# Use the following setting to disable TLS for the RPC server.  NOTE: This
# option only works if the RPC server is bound to localhost interfaces (which is
# the default).
#disable_tls: false

#rpc_cert: ""
#rpc_key: ""

# ------------------------------------------------------------------------------
# Mempool Settings - The following options
# ------------------------------------------------------------------------------

# Set the minimum transaction fee to be considered a non-zero fee,
#min_relay_tx_fee: 0.00001

# Rate-limit free transactions to the value 15 * 1000 bytes per
# minute.
#free_tx_relay_limit: 15

# Require high priority for relaying free or low-fee transactions.
#no_relay_priority: true

# Limit orphan transaction pool to 100 transactions.
#max_orphan_txs: 100

# Do not accept transactions from remote peers.
#blocks_only: true

# Relay non-standard transactions regardless of default network settings.
#relay_non_std: true

# Reject non-standard transactions regardless of default network settings.
#reject_non_std: true


# ------------------------------------------------------------------------------
# Optional Indexes
# ------------------------------------------------------------------------------

# Build and maintain a full hash-based transaction index which makes all
# transactions available via the getrawtransaction RPC.
#tx_index: true

# Build and maintain a full address-based transaction index which makes the
# searchrawtransactions RPC available.
#addr_index: true

# Delete the entire address index on start up, then exit.
#drop_tx_index: true

#drop_addr_index: false
#drop_cf_index: false

# ------------------------------------------------------------------------------
# Signature Verification Cache
# ------------------------------------------------------------------------------

# Limit the signature cache to a max of 50000 entries.
#sig_cache_max_size: 50000


# ------------------------------------------------------------------------------
# Coin Generation (Mining) Settings - The following options control the
# generation of block templates used by external mining applications through RPC
# calls as well as the built-in CPU miner (if enabled).
# ------------------------------------------------------------------------------

# Enable built-in CPU mining.

# NOTE: This is typically only useful for testing purposes such as testnet or
# simnet since the difficulty on mainnet is far too high for CPU mining to be
# worth your while.
#generate: false

# Add addresses to pay mined blocks to for CPU mining and potentially in the
# block templates generated for the getblocktemplate RPC.  One address per line.
#mining_addrs:
#  - 1yourbitcoinaddress
#  - 1yourbitcoinaddress2
#  - 1yourbitcoinaddress3

# Specify the minimum block size in bytes to create.  By default, only
# transactions which have enough fees or a high enough priority will be included
# in generated block templates.  Specifying a minimum block size will instead
# attempt to fill generated block templates up with transactions until it is at
# least the specified number of bytes.
#block_min_size: 0

# Specify the maximum block size in bytes to create.  This value will be limited
# to the consensus limit if it is larger than that value.
#block_max_size: 750000

# Specify the size in bytes of the high-priority/low-fee area when creating a
# block.  Transactions which consist of large amounts, old inputs, and small
# sizes have the highest priority.  One consequence of this is that as low-fee
# or free transactions age, they raise in priority thereby making them more
# likely to be included in this section of a new block.  This value is limited
# by the blackmaxsize option and will be limited as needed.
#block_priority_size: 50000


# ------------------------------------------------------------------------------
# Debug
# ------------------------------------------------------------------------------

# Debug logging level.
# Valid levels are {trace, debug, info, warn, error, critical}
# You may also specify <subsystem>=<level>,<subsystem2>=<level>,... to set
# log level for individual subsystems.  Use btcd --debuglevel=show to list
# available subsystems.
#debug_level: info

# The port used to listen for HTTP profile requests.  The profile server will
# be disabled if this option is not specified.  The profile information can be
# accessed at http://localhost:<profileport>/debug/pprof once running.
#profile: 6061

#block_min_size: 0
#block_max_weight: 0
#block_min_weight: 0

#cpu_profile: ""

#disable_checkpoints: false

#reject_replacement: false

#trickle_interval: 0s
#show_version: false
