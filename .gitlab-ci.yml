image: docker:git
services:
  - docker:dind

stages:
  - build
  - deploy

variables:
  DOCKER_TLS_CERTDIR: ""
  IMAGE: registry.gitlab.com/jaxnet/core/shard.core/$CI_COMMIT_REF_NAME:latest

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-hub -y )'
  - eval $(ssh-agent -s)
  - echo "$JAX_KEY" > ./key.file
  - chmod 400 ./key.file
  - ssh-add ./key.file
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - ssh-keyscan -t rsa discretemind.com >> ~/.ssh/known_hosts

build:
  stage: build
  only:
    - master
    - dev
  tags:
    - shell
  script:
    - docker build --pull -t $IMAGE .
    - docker push $IMAGE

.deploy: &deploy
  stage: deploy
  when: manual
  tags:
    - docker
  script:
    - ssh ${REMOTE} "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com && docker pull $IMAGE"
    - ssh ${REMOTE} "cd /opt/shard-core && docker-compose down && docker-compose up -d"

deploy:dev:
  stage: deploy
  <<: *deploy
  variables:
    REMOTE: $DEV_REMOTE
  only:
    - master
    - dev

deploy:stage:
  <<: *deploy
  variables:
    REMOTE: $STAGE_REMOTE
  only:
    - stage


release_build:
  stage: release_build
  image:
    name: goreleaser/goreleaser
  script:
    - goreleaser release --snapshot
  tags:
    - docker
  except:
    refs:
      - tags

release:
  stage: release
  image:
    name: goreleaser/goreleaser:latest
  before_script:
    - mkdir -p ${GOPATH}/src/${PROJECT_PATH}
    - cp -r . ${GOPATH}/src/${PROJECT_PATH}
    - cd ${GOPATH}/src/${PROJECT_PATH}
    - apk add build-base
  script:
    - goreleaser release --rm-dist
  tags:
    - docker
  only:
    refs:
      - tags
